#include<cstdio>
#include<cctype>
#include<algorithm>
#define int long long
using namespace std;
const int MOD = 1e9 + 7;
inline int read()
{
	int res = 0;
	char c;
	bool flag = true;
	c = getchar();
	while(!isdigit(c))
	{
		if(c == '-')	flag = false;
		c = getchar();
	}
	while(isdigit(c))
	{
		res = res * 10 + (c ^ 48);
		c = getchar();
	}
	return flag ? res : -res;
}
const int Max_n = 1e6 + 5;
int val[Max_n] , n , p[Max_n] , f[Max_n];
inline int lowbit(int x)
{
	return x & -x;
}
inline void add(int pos , int va)
{
	for(int i = pos ; i <= n ; i += lowbit(i))
		val[i] += va , val[i] %= MOD;
}
inline int query(int pos)
{
	int ret = 0;
	for(int i = pos ; i ; i -= lowbit(i))
		ret += val[i] , ret %= MOD;
	return ret;
}
inline int sum(int l , int r)
{
	return query(r) - query(l - 1);
}
signed main()
{
	n = read();
	for(int i = 1 ; i <= n ; ++ i)
		p[i] = read();
	f[1] = 2;
	add(1 , 2);
	for(int i = 2 ; i <= n ; ++ i)
	{
		f[i] = 1;
		add(i , 1);
		f[i] += sum(p[i]  , i) , f[i] %= MOD;
		add(i , f[i] - 1);
	}
	printf("%lld" , (query(n) + MOD) % MOD);
	return 0;
}
